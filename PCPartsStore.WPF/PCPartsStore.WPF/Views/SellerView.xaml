<UserControl x:Class="PCPartsStore.WPF.Views.SellerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             xmlns:components="clr-namespace:PCPartsStore.WPF.Components"
             lex:LocalizeDictionary.DesignCulture="en"
             lex:ResxLocalizationProvider.DefaultAssembly="PCPartsStore.WPF"
             lex:ResxLocalizationProvider.DefaultDictionary="Translation"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>
    <materialDesign:DialogHost IsOpen="{Binding IsOpen}">
        <materialDesign:DialogHost.DialogContent>
            <components:ItemQuantityForm DataContext="{Binding ItemQuantityFormViewModel}"/>
        </materialDesign:DialogHost.DialogContent>
        <DockPanel>
            <Menu DockPanel.Dock="Top">
                <MenuItem x:Name="LanguagesMenuItem" Header="{lex:Loc}">
                    <MenuItem x:Name="SerbianLanguageMenuItem" Header="{lex:Loc}" Command="{Binding ChangeLanguageSerbianCommand}"
                          IsCheckable="True" IsChecked="{Binding SerbianLanguageChecked}"/>
                    <MenuItem x:Name="EnglishLanguageMenuItem" Header="{lex:Loc}" Command="{Binding ChangeLanguageEnglishCommand}"
                          IsCheckable="True" IsChecked="{Binding EnglishLanguageChecked}"/>
                </MenuItem>
                <MenuItem x:Name="ThemeMenuItem" Header="{lex:Loc}">
                    <MenuItem x:Name="LightThemeMenuItem" Header="{lex:Loc}" Command="{Binding ChangeLightThemeCommand}"
                          IsCheckable="True" IsChecked="{Binding LightThemeChecked}"/>
                    <MenuItem x:Name="DarkThemeMenuItem" Header="{lex:Loc}" Command="{Binding ChangeDarkThemeCommand}"
                          IsCheckable="True" IsChecked="{Binding DarkThemeChecked}"/>
                    <MenuItem x:Name="GreyThemeMenuItem" Header="{lex:Loc}" Command="{Binding ChangeGreyThemeCommand}"
                IsCheckable="True" IsChecked="{Binding GreyThemeChecked}"/>
                </MenuItem>
                <MenuItem x:Name="LogoutMenuItem" Header="{lex:Loc}" Command="{Binding LogoutMenuItemCommand}"/>
            </Menu>
            <Grid DockPanel.Dock="Bottom">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <components:SearchFieldControl Grid.Row="0" DataContext="{Binding SearchFieldControl}"/>
                    <DataGrid Grid.Row="1" ItemsSource="{Binding Products}" ColumnWidth="*" SelectedItem="{Binding SelectedArticle}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Name}">
                                <DataGridTextColumn.Header>
                                    <TextBlock x:Name="ProductViewNameHeader" Text="{lex:Loc}"/>
                                </DataGridTextColumn.Header>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding Price}">
                                <DataGridTextColumn.Header>
                                    <TextBlock x:Name="ProductViewPriceHeader" Text="{lex:Loc}"/>
                                </DataGridTextColumn.Header>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding Quantity}">
                                <DataGridTextColumn.Header>
                                    <TextBlock x:Name="ProductViewQuantityHeader" Text="{lex:Loc}"/>
                                </DataGridTextColumn.Header>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Margin="10" Grid.Row="2" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Button x:Name="AddItemsButton" Width="120" Margin="10" Content="{lex:Loc}" Command="{Binding AddItemsCommand}"/>
                        <Button x:Name="AddSingleItemButton" Width="120" Margin="10" Content="{lex:Loc}" Command="{Binding AddSingleItemCommand}"/>
                    </StackPanel>
                </Grid>
                <Border Grid.Column="1" Width="5" Margin="0 0 0 20" BorderThickness="5" BorderBrush="Black"/>
                <Grid Grid.Column="2" Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0" Height="40">
                        <TextBlock Margin="10" Height="20" FontSize="14" MinHeight="20" 
                                 Visibility="{Binding HasErrorMessage, Converter={StaticResource BooleanToVisibilityConverter}}" Text="{Binding ErrorMessage}"
                    Style="{StaticResource ErrorMessage}"/>
                    </Border>

                    <Border CornerRadius="5" Grid.Row="1" BorderBrush="Black" BorderThickness="1" Margin="10">
                        <DockPanel>
                            <DataGrid DockPanel.Dock="Top" CanUserSortColumns="False" CanUserReorderColumns="False"
                                      CanUserResizeColumns="False" CanUserResizeRows="False" ItemsSource="{Binding Items}" ColumnWidth="*" SelectedItem="{Binding SelectedItem}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Article.Name}">
                                        <DataGridTextColumn.Header>
                                            <TextBlock x:Name="ItemViewNameHeader" Text="{lex:Loc}"/>
                                        </DataGridTextColumn.Header>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding Price}">
                                        <DataGridTextColumn.Header>
                                            <TextBlock x:Name="ItemViewPriceHeader" Text="{lex:Loc}"/>
                                        </DataGridTextColumn.Header>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding Quantity}">
                                        <DataGridTextColumn.Header>
                                            <TextBlock x:Name="ItemViewQuantityHeader" Text="{lex:Loc}"/>
                                        </DataGridTextColumn.Header>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <StackPanel Margin="10" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                                <TextBlock x:Name="TotalTextBlock" HorizontalAlignment="Left" Text="{lex:Loc}"/>
                                <TextBlock Padding="50 0 0 0" Text="{Binding Price}"/>
                            </StackPanel>
                        </DockPanel>
                    </Border>
                    <StackPanel Margin="10 20 0 0" Grid.Row="2" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Button x:Name="RemoveButton" Width="120" Margin="10" Content="{lex:Loc}" Command="{Binding RemoveFromReceiptCommand}"/>
                        <Button x:Name="SaveButton" Width="120" Margin="10" Content="{lex:Loc}" Command="{Binding SaveReceiptCommand}"/>
                    </StackPanel>
                </Grid>
            </Grid>
        </DockPanel>
    </materialDesign:DialogHost>
</UserControl>
